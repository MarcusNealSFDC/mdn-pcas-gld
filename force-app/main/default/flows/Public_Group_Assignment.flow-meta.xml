<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <decisions>
        <name>Assign_to_AR_Team_Public_Group</name>
        <label>Assign to AR Team Public Group</label>
        <locationX>336</locationX>
        <locationY>3503</locationY>
        <defaultConnector>
            <targetReference>Assign_to_Proposal_Superuser_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_to_AR_Team_PG</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Accounts_Receivable_Manager__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Accounts_Receivable_Reviewer__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Groups_for_AR</targetReference>
            </connector>
            <label>Assign to AR Team PG</label>
        </rules>
    </decisions>
    <decisions>
        <name>Assign_to_Contract_Specialist_Group</name>
        <label>Assign to Contract Specialist Group</label>
        <locationX>336</locationX>
        <locationY>1127</locationY>
        <defaultConnector>
            <targetReference>Assign_to_Funding_Team_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_to_Contract_Specialist_PG</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Contracts_Specialist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CRADA_Contract_Specialist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPP_Contract_Specialist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Group_for_Contract_Specialist</targetReference>
            </connector>
            <label>Assign to Contract Specialist PG</label>
        </rules>
    </decisions>
    <decisions>
        <name>Assign_to_CRADA_Team_Public_Group</name>
        <label>Assign to CRADA Team Public Group</label>
        <locationX>336</locationX>
        <locationY>2711</locationY>
        <defaultConnector>
            <targetReference>Assign_to_AR_Team_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_to_CRADA_Team_PG</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CRADA_Contract_Specialist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CRADA_Specialist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Groups_for_CRADA_Team</targetReference>
            </connector>
            <label>Assign to CRADA Team PG</label>
        </rules>
    </decisions>
    <decisions>
        <name>Assign_to_Funding_Team_Group</name>
        <label>Assign to Funding Team Group</label>
        <locationX>336</locationX>
        <locationY>1919</locationY>
        <defaultConnector>
            <targetReference>Assign_to_CRADA_Team_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_to_Funding_Team_PG</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IWO_Specialist__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Groups_for_Funding_Team</targetReference>
            </connector>
            <label>Assign to Funding Team PG</label>
        </rules>
    </decisions>
    <decisions>
        <name>Assign_to_IP_Legal_Public_Group</name>
        <label>Assign to IP Legal Public Group</label>
        <locationX>336</locationX>
        <locationY>5087</locationY>
        <defaultConnector>
            <targetReference>Assign_to_PNSO_User_PG</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_to_IP_Legal_PG</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.DOE_IP_Approver__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNNL_IP_Approver__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Groups_for_IP_Legal</targetReference>
            </connector>
            <label>Assign to IP Legal PG</label>
        </rules>
    </decisions>
    <decisions>
        <name>Assign_to_PM_PC_Group</name>
        <label>Assign to PM/PC Group</label>
        <locationX>336</locationX>
        <locationY>335</locationY>
        <defaultConnector>
            <targetReference>Assign_to_Contract_Specialist_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assigned_to_PM_PC_Group</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Project_Coordinator__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Project_Staff_Reviewer__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNNL_Work_Proposal_Manager_and_Principal__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Groups</targetReference>
            </connector>
            <label>Assigned to PM/PC Group</label>
        </rules>
    </decisions>
    <decisions>
        <name>Assign_to_PNSO_User_PG</name>
        <label>Assign to PNSO User PG</label>
        <locationX>336</locationX>
        <locationY>5879</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_to_PNSO_User</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.PNSO_ACT_Reviewer__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNSO_Animal_Researcher__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNSO_Contracting_Office__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNSO_Coordinator__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNSO_Coordinator_Foreign_Approver__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNSO_CRADA_Coordinator__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNSO_Proposal_Reviewer__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.PNSO_Technical_Reviewer__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Groups_for_PNSO_User</targetReference>
            </connector>
            <label>Assign to PNSO User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Assign_to_Proposal_Superuser_Public_Group</name>
        <label>Assign to Proposal Superuser Public Group</label>
        <locationX>336</locationX>
        <locationY>4295</locationY>
        <defaultConnector>
            <targetReference>Assign_to_IP_Legal_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Assign_to_Proposal_Superuser_PG</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.PNNL_ACT_Office__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.WALS_Sales_Team_Leads__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPP_Office_Reviewer__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Groups_for_Proposal_Superuser</targetReference>
            </connector>
            <label>Assign to Proposal Superuser PG</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_AR_Team</name>
        <label>Does the User Exist in AR Team</label>
        <locationX>182</locationX>
        <locationY>3863</locationY>
        <defaultConnector>
            <targetReference>Assign_to_Proposal_Superuser_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_AR_Team</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_for_AR</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_AR_Team</targetReference>
            </connector>
            <label>Do Not Exist in AR Team</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_CRADA_Team</name>
        <label>Does the User Exist in CRADA Team</label>
        <locationX>182</locationX>
        <locationY>3071</locationY>
        <defaultConnector>
            <targetReference>Assign_to_AR_Team_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_CRADA_Team</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_for_CRADA_Team</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_CRADA_Team</targetReference>
            </connector>
            <label>Do Not Exist in CRADA Team</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_CS</name>
        <label>Does the User Exist in CS</label>
        <locationX>182</locationX>
        <locationY>1487</locationY>
        <defaultConnector>
            <targetReference>Assign_to_Funding_Team_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_Contract_Specialist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_for_Contract_Specialist</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_CS_Group</targetReference>
            </connector>
            <label>Do Not Exist in Contract Specialist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_Funding_Team</name>
        <label>Does the User Exist in Funding Team</label>
        <locationX>182</locationX>
        <locationY>2279</locationY>
        <defaultConnector>
            <targetReference>Assign_to_CRADA_Team_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_Funding_Team</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_for_Funding_Team</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_Funding_Team</targetReference>
            </connector>
            <label>Do Not Exist in Funding Team</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_IP_Legal</name>
        <label>Does the User Exist in IP Legal</label>
        <locationX>182</locationX>
        <locationY>5447</locationY>
        <defaultConnector>
            <targetReference>Assign_to_PNSO_User_PG</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_IP_Legal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_for_IP_Legal</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_IP_Legal</targetReference>
            </connector>
            <label>Do Not Exist in IP Legal</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_PM_PC</name>
        <label>Does the User Exist in PM/PC</label>
        <locationX>182</locationX>
        <locationY>695</locationY>
        <defaultConnector>
            <targetReference>Assign_to_Contract_Specialist_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_PM_PC</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_PM_PC</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member</targetReference>
            </connector>
            <label>Do Not Exist in PM/PC</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_PNSO_User</name>
        <label>Does the User Exist in PNSO User</label>
        <locationX>182</locationX>
        <locationY>6239</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_PNSO_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_for_PNSO_User</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_PNSO_User</targetReference>
            </connector>
            <label>Do Not Exist in PNSO User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Does_the_User_Exist_in_Proposal_Superuser</name>
        <label>Does the User Exist in Proposal Superuser</label>
        <locationX>182</locationX>
        <locationY>4655</locationY>
        <defaultConnector>
            <targetReference>Assign_to_IP_Legal_Public_Group</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Do_Not_Exist_in_Proposal_Superuser</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Group_Member_and_ID_for_Proposal_Superuser</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_Proposal_Superuser</targetReference>
            </connector>
            <label>Do Not Exist in Proposal Superuser</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Public Group Assignment {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Public Group Assignment</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Add_Member</name>
        <label>Add Member</label>
        <locationX>50</locationX>
        <locationY>815</locationY>
        <connector>
            <targetReference>Assign_to_Contract_Specialist_Group</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Groups.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Member_to_AR_Team</name>
        <label>Add Member to AR Team</label>
        <locationX>50</locationX>
        <locationY>3983</locationY>
        <connector>
            <targetReference>Assign_to_Proposal_Superuser_Public_Group</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Groups_for_AR.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Member_to_CRADA_Team</name>
        <label>Add Member to CRADA Team</label>
        <locationX>50</locationX>
        <locationY>3191</locationY>
        <connector>
            <targetReference>Assign_to_AR_Team_Public_Group</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Group_Member_and_ID_for_CRADA_Team.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Member_to_CS_Group</name>
        <label>Add Member to CS Group</label>
        <locationX>50</locationX>
        <locationY>1607</locationY>
        <connector>
            <targetReference>Assign_to_Funding_Team_Group</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Group_for_Contract_Specialist.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Member_to_Funding_Team</name>
        <label>Add Member to Funding Team</label>
        <locationX>50</locationX>
        <locationY>2399</locationY>
        <connector>
            <targetReference>Assign_to_CRADA_Team_Public_Group</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Groups_for_Funding_Team.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Member_to_IP_Legal</name>
        <label>Add Member to IP Legal</label>
        <locationX>50</locationX>
        <locationY>5567</locationY>
        <connector>
            <targetReference>Assign_to_PNSO_User_PG</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Groups_for_IP_Legal.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Member_to_PNSO_User</name>
        <label>Add Member to PNSO User</label>
        <locationX>50</locationX>
        <locationY>6359</locationY>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Groups_for_PNSO_User.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Member_to_Proposal_Superuser</name>
        <label>Add Member to Proposal Superuser</label>
        <locationX>50</locationX>
        <locationY>4775</locationY>
        <connector>
            <targetReference>Assign_to_IP_Legal_Public_Group</targetReference>
        </connector>
        <inputAssignments>
            <field>GroupId</field>
            <value>
                <elementReference>Get_Groups_for_Proposal_Superuser.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Group_for_Contract_Specialist</name>
        <label>Get Group for Contract Specialist</label>
        <locationX>182</locationX>
        <locationY>1247</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_for_Contract_Specialist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Contract Specialists &amp; Assistants</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_for_AR</name>
        <label>Get Group Member and ID for AR</label>
        <locationX>182</locationX>
        <locationY>3743</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_AR_Team</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Groups_for_AR.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_for_Contract_Specialist</name>
        <label>Get Group Member and ID for Contract Specialist</label>
        <locationX>182</locationX>
        <locationY>1367</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_CS</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Group_for_Contract_Specialist.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_for_CRADA_Team</name>
        <label>Get Group Member and ID for CRADA Team</label>
        <locationX>182</locationX>
        <locationY>2951</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_CRADA_Team</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Groups_for_CRADA_Team.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_for_Funding_Team</name>
        <label>Get Group Member and ID for Funding Team</label>
        <locationX>182</locationX>
        <locationY>2159</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_Funding_Team</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Groups_for_Funding_Team.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_for_IP_Legal</name>
        <label>Get Group Member and ID for IP Legal</label>
        <locationX>182</locationX>
        <locationY>5327</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_IP_Legal</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Groups_for_IP_Legal.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_for_PNSO_User</name>
        <label>Get Group Member and ID for PNSO User</label>
        <locationX>182</locationX>
        <locationY>6119</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_PNSO_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Groups_for_PNSO_User.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_for_Proposal_Superuser</name>
        <label>Get Group Member and ID for Proposal Superuser</label>
        <locationX>182</locationX>
        <locationY>4535</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_Proposal_Superuser</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Groups_for_Proposal_Superuser.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Group_Member_and_ID_PM_PC</name>
        <label>Get Group Member and ID - PM/PC</label>
        <locationX>182</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Does_the_User_Exist_in_PM_PC</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Groups.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups</name>
        <label>Get Groups</label>
        <locationX>182</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_PM_PC</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Project Manager / Project Coordinator</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups_for_AR</name>
        <label>Get Groups for AR</label>
        <locationX>182</locationX>
        <locationY>3623</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_for_AR</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Accounts Receivable</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups_for_CRADA_Team</name>
        <label>Get Groups for CRADA Team</label>
        <locationX>182</locationX>
        <locationY>2831</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_for_CRADA_Team</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CRADA Agreements Team</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups_for_Funding_Team</name>
        <label>Get Groups for Funding Team</label>
        <locationX>182</locationX>
        <locationY>2039</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_for_Funding_Team</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Funding Team</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups_for_IP_Legal</name>
        <label>Get Groups for IP Legal</label>
        <locationX>182</locationX>
        <locationY>5207</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_for_IP_Legal</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>IP Legal</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups_for_PNSO_User</name>
        <label>Get Groups for PNSO User</label>
        <locationX>182</locationX>
        <locationY>5999</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_for_PNSO_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PNSO User</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Groups_for_Proposal_Superuser</name>
        <label>Get Groups for Proposal Superuser</label>
        <locationX>182</locationX>
        <locationY>4415</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Group_Member_and_ID_for_Proposal_Superuser</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Proposal Super User</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Assign_to_PM_PC_Group</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>User</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>GroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
</Flow>
